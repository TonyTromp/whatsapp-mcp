# Use the official Go image as the base image
FROM golang:1.24.1-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Install necessary build dependencies including bash and sqlite
RUN apk add --no-cache gcc musl-dev sqlite-dev bash sqlite

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o whatsapp-bridge .

# Use a minimal alpine image for the final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates sqlite

# Create a non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set the working directory
WORKDIR /app

# Create the store directory with proper permissions
RUN mkdir -p /app/store && \
    chown -R appuser:appgroup /app

# Copy the binary from the builder stage
COPY --from=builder /app/whatsapp-bridge .

# Change ownership of the binary
RUN chown appuser:appgroup whatsapp-bridge

# Switch to non-root user
USER appuser

# Expose the port the app runs on
EXPOSE 8080

# Run the application
CMD ["./whatsapp-bridge"] 